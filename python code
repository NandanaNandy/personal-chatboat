# import random
# import speech_recognition as sr

# # Define some responses
# responses = {
#     "hello": ["Hello!", "Hi there!", "Hey!"],
#     "how _are_you": ["I'm doing well, thank you!", "I'm good, thanks for asking.", "All good on this side."],
#     "bye": ["Goodbye!", "See you later!", "Bye! Take care."],
#     "random": ["Interesting!", "Tell me more.", "I see.", "Fascinating!"]
# }

# def greet ():
#     return random. Choice (responses["hello"])

# def ask_how_are_you ():
#     return random. Choice (responses["how_are_you"])

# def say_goodbye ():
#     return random. Choice (responses["bye"])

# def respond_to_input(input_text):
#     if "hello" in input_text. Lower ():
#         return greet ()
#     elif "how are you" in input_text. Lower ():
#         return ask_how_are_you ()
#     elif "bye" in input_text. Lower ():
#         return say_goodbye ()
#     else:
#         return random. Choice (responses["random"])

# def recognize_speech ():
#     recognizer = sr. Recognizer ()
#     with sr. Microphone () as source:
#         print("Listening...")
#         recognizer. adjust_for_ambient_noise (source, duration=1)
#         audio = recognizer.listen(source)

#     try:
#         print("Recognizing...")
#         text = recognizer.recognize_google(audio)
#         print("You said:", text)
#         return text
#     except sr.UnknownValueError:
#         print("Sorry, I couldn't understand what you said.")
#         return ""
#     except sr.RequestError as e:
#         print("Could not request results from Google Speech Recognition service; {0}".format(e))
#         return ""

# def main():
#     print("Welcome to Smartypants! Say something or type 'quit' to exit.")
#     while True:
#         user_input = input("> ")
#         if user_input.lower() == 'quit':
#             print(say_goodbye())
#             break
#         else:
#             if user_input.strip() == "":
#                 user_input = recognize_speech()
#             response = respond_to_input(user_input)
#             print(response)

# if __name__ == "__main__":
#     main()
# import random
# import speech_recognition as sr

# # Define some responses
# responses = {
#     "greeting": ["Hello!", "Hi there!", "Hey! How can I assist you today?"],
#     "how_are_you": ["I'm doing well, thank you! How about you?", "I'm good, thanks for asking!", "All good here! How are you?"],
#     "farewell": ["Goodbye!", "See you later!", "Bye! Take care."],
#     "fallback": ["I'm not sure I understand. Could you rephrase?", "Interesting! Could you elaborate?", "Tell me more about that!"],
#     "thanks": ["You're welcome!", "No problem at all!", "Happy to help!"]
# }

# # Context memory for short-term conversation
# context = {}

# def get_response(intent):
#     """Get a response based on the intent"""
#     return random.choice(responses.get(intent, responses["fallback"]))

# def detect_intent(input_text):
#     """Simple intent detection based on keywords"""
#     input_text = input_text.lower()
#     if any(word in input_text for word in ["hello", "hi", "hey"]):
#         return "greeting"
#     elif "how are you" in input_text:
#         return "how_are_you"
#     elif any(word in input_text for word in ["bye", "goodbye"]):
#         return "farewell"
#     elif any(word in input_text for word in ["thank", "thanks"]):
#         return "thanks"
#     else:
#         return "fallback"

# def respond_to_input(input_text):
#     """Process input and respond accordingly"""
#     intent = detect_intent(input_text)
#     response = get_response(intent)
#     return response

# def recognize_speech():
#     recognizer = sr.Recognizer()
#     with sr.Microphone() as source:
#         print("Listening...")
#         recognizer.adjust_for_ambient_noise(source, duration=1)
#         audio = recognizer.listen(source)

#     try:
#         print("Recognizing...")
#         text = recognizer.recognize_google(audio)
#         print("You said:", text)
#         return text
#     except sr.UnknownValueError:
#         print("Sorry, I couldn't understand what you said.")
#         return ""
#     except sr.RequestError as e:
#         print(f"Could not request results from Google Speech Recognition service; {e}")
#         return ""

# def main():
#     print("Welcome to Realistic Chatbot! Speak something or say 'quit' to exit.")
#     while True:
#         print("Say something...")
#         user_input = recognize_speech()
#         if user_input.lower() == 'quit':
#             print(get_response("farewell"))
#             break
#         elif user_input.strip():
#             response = respond_to_input(user_input)
#             print(response)
#         else:
#             print("I didn't catch that. Could you try again?")

# if __name__ == "__main__":
#     main()
import random
import speech_recognition as sr
import pyttsx3

# Initialize pyttsx3 for text-to-speech (Optional)
engine = pyttsx3.init()

# Define some responses
responses = {
    "greeting": ["Hello!", "Hi there!", "Hey! How can I assist you today?"],
    "how_are_you": ["I'm doing well, thank you! How about you?", "I'm good, thanks for asking!", "All good here! How are you?"],
    "farewell": ["Goodbye!", "See you later!", "Bye! Take care."],
    "fallback": ["I'm not sure I understand. Could you rephrase?", "Interesting! Could you elaborate?", "Tell me more about that!"],
    "thanks": ["You're welcome!", "No problem at all!", "Happy to help!"]
}

# Context memory for short-term conversation
context = {}

# Function to get a response based on the intent
def get_response(intent):
    """Get a response based on the intent"""
    return random.choice(responses.get(intent, responses["fallback"]))

# Function for intent detection based on speech
def detect_intent(input_text):
    """Simple intent detection based on keywords"""
    input_text = input_text.lower()
    if any(word in input_text for word in ["hello", "hi", "hey"]):
        return "greeting"
    elif "how are you" in input_text:
        return "how_are_you"
    elif any(word in input_text for word in ["bye", "goodbye"]):
        return "farewell"
    elif any(word in input_text for word in ["thank", "thanks"]):
        return "thanks"
    else:
        return "fallback"

# Function to process input and respond accordingly
def respond_to_input(input_text):
    """Process input and respond accordingly"""
    intent = detect_intent(input_text)
    response = get_response(intent)
    return response

# Function to recognize speech from the microphone
def recognize_speech():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source, duration=1)  # Adjusts for ambient noise
        audio = recognizer.listen(source)

    try:
        print("Recognizing...")
        text = recognizer.recognize_google(audio)
        print("You said:", text)
        return text
    except sr.UnknownValueError:
        print("Sorry, I couldn't understand what you said.")
        return ""
    except sr.RequestError as e:
        print(f"Could not request results from Google Speech Recognition service; {e}")
        return ""

# Function for the chatbot to speak the response
def speak(response):
    engine.say(response)
    engine.runAndWait()

# Main chatbot loop
def main():
    print("Welcome to the chatbot! Say something or say 'quit' to exit.")
    while True:
        print("Say something...")
        user_input = recognize_speech()
        
        if user_input.lower() == 'quit':
            response = get_response("farewell")
            print(response)
            speak(response)
            break
        elif user_input.strip():
            response = respond_to_input(user_input)  # Get chatbot response
            print(response)
            speak(response)  # Optional: Speak the response
        else:
            print("I didn't catch that. Could you try again?")

if __name__ == "__main__":
    main()

